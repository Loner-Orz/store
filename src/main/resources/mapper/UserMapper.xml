<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace的属性：用于指定当前的映射文件和哪个接口文件映射，所以需要指定接口的文件路径，需要标注包的完整路径接口-->
<mapper namespace="com.cy.store.mapper.UserMappper">
    <!--自定义映射规则：resultMap标签来完成映射规则的定义-->
    <!--
        id属性：标签给这个映射负责分配一个唯一的id值，相对应的resultMap=“id属性的值”
        type属性：取值是一个类，表示的是数据库中的查询结果与java中的哪个实体类进行结果集的映射
    -->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
        <!--将表的资源和类的属性不一致的字段进行匹配，名称一致的可以省略-->
        <!--
            column属性:表中的资源名称
            property属性:类中的属性名称
        -->
        <!--在定义映射规则时主键不能省略，无论名称是否一致-->
        <result column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>
    <!--id的值表示映射的接口中方法的名称，直接在标签的内部编写sql语句-->
    <!--
        useGeneratedKeys属性：表示开启某字段的值递增(一般为主键)
        KeyProperty属性：表示将表中的哪个字段作为逐渐递增
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user(
            username,password,salt,phone,email,gender,avatar,
            is_delete,created_user,created_time,modified_user,modified_time
        )VALUES(
            #{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},
            #{isDelete},#{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
        )</insert>
    <!--select语句在执行的时候，查询的结果是一个对象，多个对象-->
    <!--
        resultType:表示查询的结果集类型，只需要指定对应映射类的类型，并且包含完整接口
        resultMap:标签当表的资源和类的对象属性字段名不一致时，用来自定义查询结果集的映射规则
    -->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username=#{username}
    </select>

    <update id="updatePasswordByUid">
        UPDATE t_user
        SET
            password=#{password},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE
            uid=#{uid}
    </update>

    <select id="findByUid" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE uid=#{uid}
    </select>


    <update id="updateInfoByUid">
        UPDATE t_user
        SET
            <!--if表示条件判断标签，test接收返回值为boolean类型的条件
                如果test结果为true，则执行if标签内部的语句，反之则不执行
            -->
            <if test="phone!=null">phone=#{phone},</if>
            <if test="email!=null">email=#{email},</if>
            <if test="gender!=null">gender=#{gender},</if>
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE
            uid=#{uid}
    </update>

    <update id="updateAvatarByUid">
        UPDATE t_user
        SET
            avatar=#{avatar},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE
            uid=#{uid}
    </update>



</mapper>